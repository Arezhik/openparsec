diff -u parsec_server/con_info_sv.cpp ../../openparsec.bak/src/parsec_server/con_info_sv.cpp
--- parsec_server/con_info_sv.cpp	2013-01-31 13:22:06.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/con_info_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -1961,7 +1961,7 @@
 	KEY_FACEINFO_CLASSID,
 	KEY_FACEINFO_FACEID,
 	KEY_FACEINFO_SHADER,
-	KEY_FACEINFO_TEXTURE
+	KEY_FACEINFO_TEXTURE,
 };
 
 
diff -u parsec_server/con_int_sv.cpp ../../openparsec.bak/src/parsec_server/con_int_sv.cpp
--- parsec_server/con_int_sv.cpp	2013-01-31 13:22:08.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/con_int_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -129,22 +129,22 @@
 { \
 }
 
-DEF_MYSHIP_INT( Weapons )
-DEF_MYSHIP_INT( Specials )
-DEF_MYSHIP_INT( CurDamage )
-DEF_MYSHIP_INT( CurEnergy )
-DEF_MYSHIP_INT( CurSpeed )
-DEF_MYSHIP_INT( NumMissls )
-DEF_MYSHIP_INT( NumHomMissls )
-DEF_MYSHIP_INT( NumPartMissls )
-DEF_MYSHIP_INT( NumMines )
-DEF_MYSHIP_INT( MaxDamage )
-DEF_MYSHIP_INT( MaxEnergy )
-DEF_MYSHIP_INT( MaxSpeed )
-DEF_MYSHIP_INT( MaxNumMissls )
-DEF_MYSHIP_INT( MaxNumHomMissls )
-DEF_MYSHIP_INT( MaxNumPartMissls )
-DEF_MYSHIP_INT( MaxNumMines )
+DEF_MYSHIP_INT( Weapons );
+DEF_MYSHIP_INT( Specials );
+DEF_MYSHIP_INT( CurDamage );
+DEF_MYSHIP_INT( CurEnergy );
+DEF_MYSHIP_INT( CurSpeed );
+DEF_MYSHIP_INT( NumMissls );
+DEF_MYSHIP_INT( NumHomMissls );
+DEF_MYSHIP_INT( NumPartMissls );
+DEF_MYSHIP_INT( NumMines );
+DEF_MYSHIP_INT( MaxDamage );
+DEF_MYSHIP_INT( MaxEnergy );
+DEF_MYSHIP_INT( MaxSpeed );
+DEF_MYSHIP_INT( MaxNumMissls );
+DEF_MYSHIP_INT( MaxNumHomMissls );
+DEF_MYSHIP_INT( MaxNumPartMissls );
+DEF_MYSHIP_INT( MaxNumMines );
 
 
 //FIXME: get rid of these proxy stuff
@@ -204,35 +204,35 @@
 	The##name->f = name##_proxy.f; \
 }
 
-DEF_PROXY_INT( GameExtraManager, MaxExtraArea )
-DEF_PROXY_INT( GameExtraManager, MinExtraDist )
-DEF_PROXY_INT( Game, EnergyExtraBoost )
-DEF_PROXY_INT( Game, RepairExtraBoost )
-DEF_PROXY_INT( Game, DumbPackNumMissls )
-DEF_PROXY_INT( Game, HomPackNumMissls )
-DEF_PROXY_INT( Game, SwarmPackNumMissls )
-DEF_PROXY_INT( Game, ProxPackNumMines )
-DEF_PROXY_INT( Game, m_NebulaID)
-DEF_PROXY_INT( GameExtraManager, ExtraProbability )
-DEF_PROXY_INT( GameExtraManager, ProbHelixCannon )
-DEF_PROXY_INT( GameExtraManager, ProbLightningDevice )
-DEF_PROXY_INT( GameExtraManager, ProbPhotonCannon )
-DEF_PROXY_INT( GameExtraManager, ProbProximityMine )
-DEF_PROXY_INT( GameExtraManager, ProbRepairExtra )
-DEF_PROXY_INT( GameExtraManager, ProbAfterburner )
-DEF_PROXY_INT( GameExtraManager, ProbHoloDecoy )
-DEF_PROXY_INT( GameExtraManager, ProbInvisibility )
-DEF_PROXY_INT( GameExtraManager, ProbInvulnerability )
-DEF_PROXY_INT( GameExtraManager, ProbEnergyField )
-DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade )
-DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade1 )
-DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade2 )
-DEF_PROXY_INT( GameExtraManager, ProbMissilePack )
-DEF_PROXY_INT( GameExtraManager, ProbDumbMissPack )
-DEF_PROXY_INT( GameExtraManager, ProbHomMissPack )
-DEF_PROXY_INT( GameExtraManager, ProbSwarmMissPack )
-DEF_PROXY_INT( GameExtraManager, ProbEmpUpgrade1 )
-DEF_PROXY_INT( GameExtraManager, ProbEmpUpgrade2 )
+DEF_PROXY_INT( GameExtraManager, MaxExtraArea );
+DEF_PROXY_INT( GameExtraManager, MinExtraDist );
+DEF_PROXY_INT( Game, EnergyExtraBoost );
+DEF_PROXY_INT( Game, RepairExtraBoost );
+DEF_PROXY_INT( Game, DumbPackNumMissls );
+DEF_PROXY_INT( Game, HomPackNumMissls );
+DEF_PROXY_INT( Game, SwarmPackNumMissls );
+DEF_PROXY_INT( Game, ProxPackNumMines );
+DEF_PROXY_INT( Game, m_NebulaID);
+DEF_PROXY_INT( GameExtraManager, ExtraProbability );
+DEF_PROXY_INT( GameExtraManager, ProbHelixCannon );
+DEF_PROXY_INT( GameExtraManager, ProbLightningDevice );
+DEF_PROXY_INT( GameExtraManager, ProbPhotonCannon );
+DEF_PROXY_INT( GameExtraManager, ProbProximityMine );
+DEF_PROXY_INT( GameExtraManager, ProbRepairExtra );
+DEF_PROXY_INT( GameExtraManager, ProbAfterburner );
+DEF_PROXY_INT( GameExtraManager, ProbHoloDecoy );
+DEF_PROXY_INT( GameExtraManager, ProbInvisibility );
+DEF_PROXY_INT( GameExtraManager, ProbInvulnerability );
+DEF_PROXY_INT( GameExtraManager, ProbEnergyField );
+DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade );
+DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade1 );
+DEF_PROXY_INT( GameExtraManager, ProbLaserUpgrade2 );
+DEF_PROXY_INT( GameExtraManager, ProbMissilePack );
+DEF_PROXY_INT( GameExtraManager, ProbDumbMissPack );
+DEF_PROXY_INT( GameExtraManager, ProbHomMissPack );
+DEF_PROXY_INT( GameExtraManager, ProbSwarmMissPack );
+DEF_PROXY_INT( GameExtraManager, ProbEmpUpgrade1 );
+DEF_PROXY_INT( GameExtraManager, ProbEmpUpgrade2 );
 
 /*
 // perform remote event syncing for certain int vars --------------------------
diff -u parsec_server/con_load_sv.cpp ../../openparsec.bak/src/parsec_server/con_load_sv.cpp
--- parsec_server/con_load_sv.cpp	2013-01-31 13:22:05.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/con_load_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -415,7 +415,7 @@
 	KEY_OBJ_SHADER,
 	KEY_OBJ_NORMTH,
 	KEY_OBJ_MAXFANIMS,
-	KEY_OBJ_MAXVANIMS
+	KEY_OBJ_MAXVANIMS,
 };
 
 
diff -u parsec_server/con_main_sv.cpp ../../openparsec.bak/src/parsec_server/con_main_sv.cpp
--- parsec_server/con_main_sv.cpp	2013-01-31 13:22:04.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/con_main_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -83,9 +83,9 @@
 
 // CURSES library -------------------------------------------------------------
 #ifdef USE_CURSES
-	#ifdef SYSTEM_WIN32_UNUSED
+	#ifdef SYSTEM_WIN32
 		#pragma comment( lib, "curses.lib" )
-	#endif // SYSTEM_WIN32_UNUSED
+	#endif // SYSTEM_WIN32
 #endif // USE_CURSES
 
 // flags
@@ -545,7 +545,7 @@
 	dword *pos;
 
 	while ( *( pos = &KeybBuffer->Data + KeybBuffer->ReadPos ) ) {
-		KeybBuffer->ReadPos = ( KeybBuffer->ReadPos + 1 ) % KEYB_BUFF_SIZ;
+		KeybBuffer->ReadPos = ( KeybBuffer->ReadPos + 1 ) & KEYB_BUFF_SIZ_M;
 		*pos = 0;
 	}
 }
@@ -767,7 +767,7 @@
 
 	KEY_COMPILE_TITLE,
 	KEY_COMPILE_DESC,
-	KEY_COMPILE_AUTHOR
+	KEY_COMPILE_AUTHOR,
 };
 
 
@@ -1436,7 +1436,7 @@
 		}
 
 		// advance one position in circular keybuffer
-		KeybBuffer->ReadPos = ( KeybBuffer->ReadPos + 1 ) % KEYB_BUFF_SIZ;
+		KeybBuffer->ReadPos = ( KeybBuffer->ReadPos + 1 ) & KEYB_BUFF_SIZ_M;
 		*pos = 0;
 
 		console_input_done = true;
@@ -1476,7 +1476,7 @@
 			SetQuicksayConsole( FALSE );
 		}
 
-		readpos = ( readpos + 1 ) % KEYB_BUFF_SIZ;
+		readpos = ( readpos + 1 ) & KEYB_BUFF_SIZ_M;
 	}
 
 	// use standard input handling
diff -u parsec_server/e_colldet_sv.cpp ../../openparsec.bak/src/parsec_server/e_colldet_sv.cpp
--- parsec_server/e_colldet_sv.cpp	2013-01-31 13:22:05.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/e_colldet_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -523,15 +523,16 @@
 
 	// apply damage
 	if ( cur_ship->CurDamage <= cur_ship->MaxDamage ) {
-
-		cur_ship->CurDamageFrac +=  TheSimulator->GetThisFrameRefFrames() * hitpoints;
+		/* old confusing shit....
+		 *
+		cur_ship->CurDamageFrac += (DEFAULT_REFFRAME_FREQUENCY/6) * hitpoints;
 		cur_ship->CurDamage += cur_ship->CurDamageFrac >> 16;
 		MSGOUT("Doing %d damage to ship", cur_ship->CurDamageFrac >> 16);
 		cur_ship->CurDamageFrac &= 0xffff;
-
+		*/
 
 		// new less confusing shit...
-		//cur_ship->CurDamage += hitpoints;
+		cur_ship->CurDamage += hitpoints;
 	}
 
 	// check whether the ship should explode
@@ -1119,7 +1120,7 @@
                     OBJ_ShipHelixDamage( walkships, owner );
                     break;
                  case PARTICLE_IS_PHOTON :
-                    OBJ_ShipPhotonDamage( walkships, owner );
+                    //OBJ_ShipPhotonDamage( walkships, owner );
                     break;
                  default:
                     break;
@@ -1127,60 +1128,6 @@
        }
 }
 
-// inflict damage upon ship hit by photon weapon ------------------------------
-//
-void G_CollDet::OBJ_ShipPhotonDamage( ShipObject *shippo, int owner )
-{
-	ASSERT( shippo != NULL );
-    
-	//NOTE:
-	// this function is used by
-	// PART_ANI::LinearParticleCollision().
-    
-#define PHOTON_HITPOINTS_PER_PARTICLE 3
-    
-	// no damage at all if megashield active
-	if ( shippo->MegaShieldAbsorption > 0 )
-		return;
-    if (shippo->ExplosionCount == 0 ) {
-        
-		shippo->CurDamage += PHOTON_HITPOINTS_PER_PARTICLE;
-		if ( shippo->CurDamage > shippo->MaxDamage ) {
-            // needed for explosions caused by particles
-            shippo->DelayExplosion = 1;
-            
-            int nClientID_Attacker = owner;
-            int nClientID_Downed   = GetOwnerFromHostOjbNumber( shippo->HostObjNumber );
-            
-            // create the extras this client left
-            TheGameExtraManager->OBJ_CreateShipExtras( shippo );
-            
-            E_SimPlayerInfo* pSimPlayerInfo = TheSimulator->GetSimPlayerInfo( nClientID_Downed );
-            
-            // maintain stats
-            TheGame->RecordKill ( nClientID_Attacker );
-            TheGame->RecordDeath( nClientID_Downed, nClientID_Attacker );
-            
-            // fill rudimentary RE
-            RE_PlayerStatus ps;
-            memset( &ps, 0, sizeof ( RE_PlayerStatus ) );
-            ps.player_status	= PLAYER_CONNECTED;
-            ps.senderid         = nClientID_Downed;
-            ps.params[ 0 ]		= SHIP_DOWNED;
-            pSimPlayerInfo->PerformUnjoin( &ps );
-            
-            // ignore joins from client, until he himself sent an unjoin
-            //FIXME: redesign this !!
-            pSimPlayerInfo->IgnoreJoinUntilUnjoinFromClient();
-            
-            // force a client resync of the downed client
-            TheSimulator->GetSimClientState( nClientID_Downed )->SetClientResync();
-            MSGOUT( "%s was mowed down by %s's Photon Cannon", TheConnManager->GetClientName( nClientID_Downed ),TheConnManager->GetClientName( nClientID_Attacker ) );
-        }
-	}
-}
-
-
 // check if ship entered energy field -----------------------------------------
 //
 void G_CollDet::CheckEnergyField( pcluster_s *cluster )
diff -u parsec_server/e_gameserver.cpp ../../openparsec.bak/src/parsec_server/e_gameserver.cpp
--- parsec_server/e_gameserver.cpp	2013-01-31 13:22:05.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/e_gameserver.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -762,7 +762,7 @@
 enum {
 
 	KEY_MASTERSERVER_NAME,
-	KEY_MASTERSERVER_INTERVAL
+	KEY_MASTERSERVER_INTERVAL,
 };
 
 // min/max interval for heartbeats to the masterserve -------------------------
@@ -832,7 +832,7 @@
 
 	KEY_SERVER_NAME,
 	KEY_SERVER_MAXPLAYERS,
-	KEY_SERVER_SIMFREQ
+	KEY_SERVER_SIMFREQ,
 };
 
 // min/max interval simulation frequency --------------------------------------
@@ -912,7 +912,7 @@
 
 	KEY_SERVERLINK_SERVERID,
 	KEY_SERVERLINK_POS,
-	KEY_SERVERLINK_DIR
+	KEY_SERVERLINK_DIR,
 };
 
 
diff -u parsec_server/e_simulator.cpp ../../openparsec.bak/src/parsec_server/e_simulator.cpp
--- parsec_server/e_simulator.cpp	2013-01-31 13:22:06.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/e_simulator.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -89,11 +89,11 @@
 #ifdef _SLERP_DEBUGGING
 
 //FIXME: not needed anymore ?
-/*#ifdef SYSTEM_WIN32_UNUSED
+/*#ifdef SYSTEM_WIN32
 	#include "windows.h"
 	#include "mmsystem.h"
 	#pragma comment( lib, "winmm.lib" )
-#endif // SYSTEM_WIN32_UNUSED
+#endif // SYSTEM_WIN32
 */
 
 #endif // _SLERP_DEBUGGING
diff -u parsec_server/e_world.cpp ../../openparsec.bak/src/parsec_server/e_world.cpp
--- parsec_server/e_world.cpp	2013-01-31 13:22:07.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/e_world.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -53,8 +53,6 @@
 #include "net_util.h"
 #include "e_simulator.h"
 #include "e_colldet.h"
-#include "g_player.h"
-#include "g_main_sv.h"
 
 // local module header
 #include "obj_cust.h"
@@ -86,7 +84,6 @@
 //
 float sphere_ref_z = 1.0f;
 float lightning_ref_z = 1.0f;
-float photon_ref_z = 1.0f;
 
 void LinearParticleCollision( linear_pcluster_s *cluster, int pid );
 // flags
@@ -109,12 +106,6 @@
 pcluster_s *CurLinearCluster	= NULL;
 pcluster_s *CustomDrawCluster	= NULL;
 
-// array of registered particle definitions -----------------------------------
-//
-PUBLIC int				NumParticleDefinitions = 0;
-PUBLIC pdefref_s		ParticleDefinitions[ MAX_PARTICLE_DEFS ];
-
-
 // ----------------------------------------------------------------------------
 //
 int E_World::_CountGenObjects( GenObject* walklist )
@@ -1094,7 +1085,7 @@
             
 		case ( CT_PHOTON_SPHERE & CT_TYPEENUMERATIONMASK ):
 			// already called in G_SUPP::MaintainDurationWeapons()
-			//CalcPhotonSphereAnimation( (photon_sphere_pcluster_s *) cluster );
+			// WFX_CalcPhotonSphereAnimation( (photon_sphere_pcluster_s *) cluster );
 			break;
             
         case ( CT_PARTICLE_SPHERE & CT_TYPEENUMERATIONMASK ):
@@ -1310,7 +1301,7 @@
 	// free storage (cluster header and particle storage)
 	FREEMEM( cluster->rep );
 	FREEMEM( cluster );
-    MSGOUT("E_World::PRT_DeleteCluster(): Free'd particle cluster");
+    //MSGOUT("E_World::PRT_DeleteCluster(): Free'd particle cluster");
 }
 
 // remove cluster from its attachment list if contained in any ----------------
@@ -2307,392 +2298,6 @@
 	position.Z += GEOMV_MUL( vec.Z, speed );
 }
 
-// acquire already registered particle definition via its id ------------------
-//
-pdef_s * E_World::PRT_AcquireParticleDefinitionById(
-                                           int			pdefid			// id of particle definition
-                                           )
-{
-	// ensure id is valid
-	if ( ( pdefid < 0 ) || ( pdefid >= NumParticleDefinitions ) )
-		return NULL;
-    
-	// fetch from table
-	pdef_s *pdef = ParticleDefinitions[ pdefid ].def;
-	ASSERT( pdef != NULL );
-    
-	return pdef;
-};
-
-// acquire already registered particle definition via its unique name ---------
-//
-pdef_s * E_World::PRT_AcquireParticleDefinition(
-                                       const char*	pdefname,		// unique name for particle definition
-                                       int*		retpdefid		// id of returned particle definition
-                                       )
-{
-	ASSERT( pdefname != NULL );
-    
-	// scan all registered particle definitions
-	for ( int curdef = 0; curdef < NumParticleDefinitions; curdef++ ) {
-		if ( strcmp( ParticleDefinitions[ curdef ].defname, pdefname ) == 0 ) {
-            
-			// return id if desired
-			if ( retpdefid != NULL )
-				*retpdefid = curdef;
-            
-			// return pointer to pdef
-			return ParticleDefinitions[ curdef ].def;
-		}
-	}
-    
-	return NULL;
-};
-
-// create particle sphere for photon cannon -----------------------------------
-//
-photon_sphere_pcluster_s * E_World::CreatePhotonSphere( ShipObject *shippo )
-{
-	ASSERT( shippo != NULL );
-	ASSERT( OBJECT_TYPE_SHIP( shippo ) );
-    
-    pextinfo_s extinfo;
-
-    /*
-	// fetch pdef
-	static int pdefid = -1;
-	pdef_s *pdef = ( pdefid != -1 ) ? PRT_AcquireParticleDefinitionById( pdefid ) : PRT_AcquireParticleDefinition( "photon1", &pdefid );
-	if ( pdef == NULL ) {
-        MSGOUT( "photon particles invalid." );
-        return NULL;
-	}
-    
-	// create extinfo
-    pextinfo_s extinfo;
-	//PRT_InitParticleExtInfo( &extinfo, pdef, NULL, NULL );
-    */
-	// determine cluster type and hints
-    dword clustertype = CT_PHOTON_SPHERE;
-	clustertype |= CT_EXTINFO_STORAGE;
-	clustertype |= CT_CLUSTER_GLOBAL_EXTINFO;
-	clustertype |= CT_HINT_PARTICLES_HAVE_EXTINFO;
-	clustertype |= CT_HINT_PARTICLES_IDENTICAL;
-    
-    // create new cluster
-    int clustersiz = PHOTON_SPHERE_PARTICLES;
-	photon_sphere_pcluster_s *cluster = (photon_sphere_pcluster_s *)
-    PRT_NewCluster( clustertype, clustersiz, 0 );
-    
-	// fill in basic fields
-	cluster->animtype				= SAT_PHOTON;
-	cluster->bdsphere				= shippo->BoundingSphere;
-	cluster->contraction_time		= PHOTON_CONTRACTION_TIME;
-	cluster->cur_contraction_time	= 0;
-	cluster->contraction_speed		= PHOTON_CONTRACTION_SPEED;
-	cluster->max_loading_time		= PHOTON_MAX_LOADING_TIME;
-	cluster->firing					= FALSE;
-	cluster->numloads				= PHOTON_NUMLOADS;
-	cluster->alive					= 0;
-	cluster->center.X				= 0;
-	cluster->center.Y				= 0;
-	cluster->center.Z				= 0;
-	cluster->pitch					= PHOTON_ROT_PITCH;
-	cluster->yaw					= PHOTON_ROT_YAW;
-	cluster->roll					= PHOTON_ROT_ROLL;
-    
-	// set particle properties
-	for ( int curp = 0; curp < clustersiz; curp++ ) {
-        
-		Vertex3 particlepos;
-        CalcSphereParticlePosition( particlepos, shippo->BoundingSphere, SAT_SPHERETYPE_NORMAL );
-        
-		// copy extinfo into cluster
-		pextinfo_s *curextinfo = (pextinfo_s *)( cluster->rep + clustersiz ) + curp;
-		memcpy( curextinfo, &extinfo, sizeof( pextinfo_s ) );
-        
-		// init particle in cluster
-        cluster->rep[ curp ].owner		= GetObjectOwner( shippo );
-        cluster->rep[ curp ].flags		= PARTICLE_ACTIVE;
-        cluster->rep[ curp ].lifetime	= INFINITE_LIFETIME;
-        cluster->rep[ curp ].extinfo	= curextinfo;
-        cluster->rep[ curp ].bitmap		= iter_texrgba | iter_specularadd;
-        cluster->rep[ curp ].color		= PHOTON_COLOR;
-        cluster->rep[ curp ].sizebound	= PRT_NO_SIZEBOUND;
-        cluster->rep[ curp ].ref_z		= photon_ref_z;
-        cluster->rep[ curp ].position	= particlepos;
-        cluster->rep[ curp ].velocity.X	= GEOMV_0;
-		cluster->rep[ curp ].velocity.Y	= GEOMV_0;
-		cluster->rep[ curp ].velocity.Z	= GEOMV_0;
-        
-        // increase number of elements
-        Particles->numel++;
-    }
-    
-	// at least one particle has to be visible
-    cluster->numel = 1;
-    
-    // attach sphere's particle cluster to object
-	PRT_AttachClusterToObject( shippo, (objectbase_pcluster_s *)cluster );
-    
-    return cluster;
-}
-
-// calc animation of photon sphere --------------------------------------------
-//
-void E_World::CalcPhotonSphereAnimation( photon_sphere_pcluster_s *cluster )
-{
-	ASSERT( cluster != NULL );
-    ASSERT( ( cluster->type & CT_TYPEMASK ) == CT_PHOTON_SPHERE );
-    
-    ShipObject *shippo = (ShipObject *) cluster->baseobject;
-        
-    float part_prf = ( cluster->max_loading_time / cluster->maxnumel );
-	Vertex3 old_center;
-	geomv_t contraction;
-    
-    if ( !cluster->firing ) {
-        
-        // determine maximum remaining loading time
-        int working_time = cluster->max_loading_time - cluster->alive;
-        
-        // determine actual loading time
-        if ( working_time > TheSimulator->GetThisFrameRefFrames() ) {
-            working_time = TheSimulator->GetThisFrameRefFrames();
-        }
-        cluster->alive += working_time;
-        
-        dword energy_consumption = shippo->CurEnergyFrac +
-        ( working_time * PHOTON_ENERGY_CONSUMPTION );
-        G_Player*  pPlayer = TheGame->GetPlayer( GetObjectOwner( shippo ) );
-        
-        // check if enough energy to build
-        if ( (dword)shippo->CurEnergy < ( MIN_PHOTON_ENERGY + energy_consumption >> 16 ) ) {
-            cluster->alive = (int)(cluster->alive -( working_time - ( shippo->CurEnergy - MIN_PHOTON_ENERGY ) /
-                                                    FIXED_TO_FLOAT( PHOTON_ENERGY_CONSUMPTION ) ));
-            shippo->CurEnergy = MIN_PHOTON_ENERGY - 1;
-            pPlayer->_WFX_DeactivatePhoton();
-        } else {
-            shippo->CurEnergyFrac = ( energy_consumption & 0xffff );
-            shippo->CurEnergy    -= ( energy_consumption >> 16 );
-        }
-        
-        // calculate number of visible particles
-        if ( ( cluster->alive < cluster->max_loading_time ) ) {
-            cluster->numel = (int)( cluster->alive / part_prf );
-            if ( cluster->numel == 0 ) {
-                // at least one particle must be visible
-                cluster->numel = 1;
-            }
-        }
-        else {
-            cluster->numel = cluster->maxnumel;
-            
-            //NOTE:
-            // CurScreenRefFrames get added some lines below anyway,
-            // so we must not add them here
-            cluster->cur_contraction_time -= working_time;
-            
-            pPlayer->_WFX_DeactivatePhoton();
-        }
-    }
-    
-    if ( cluster->firing ) {
-        
-        // increase counter
-        cluster->cur_contraction_time += TheSimulator->GetThisFrameRefFrames();
-        
-        // create linear particles
-        
-        // number of particles in full load
-        int single_load = ( cluster->maxnumel / cluster->numloads );
-        int old_numel = cluster->numel;
-        
-        // number of full loads to be created
-        int numloads = ( cluster->cur_contraction_time / cluster->contraction_time );
-        // minimize on full loads available
-        if ( numloads > ( old_numel / single_load ) ) {
-            numloads = ( old_numel / single_load );
-        }
-        
-        // set particle properties
-   
-        int color     = PHOTON_COLOR;
-        float ref_z = photon_ref_z;
-        int sizebound = PRT_NO_SIZEBOUND;
-        int lifetime  = shippo->PhotonLifeTime;
-        int playerid  = GetObjectOwner( shippo );
-        
-        pextinfo_s extinfo;
-
-        /*
-        // fetch pdef
-        static int pdefid = -1;
-        pdef_s *pdef = ( pdefid != -1 ) ?
-        PRT_AcquireParticleDefinitionById( pdefid ) :
-        PRT_AcquireParticleDefinition( "photon1", &pdefid );
-        
-        // create extinfo
-        pextinfo_s extinfo;
-       // PRT_InitParticleExtInfo( &extinfo, pdef, NULL, NULL );
-        */
-        // set speed and direction vector
-        Vector3 dirvec;
-        fixed_t speed = shippo->PhotonSpeed + shippo->CurSpeed;
-        DirVctMUL( shippo->ObjPosition, FIXED_TO_GEOMV( speed ), &dirvec );
-        
-        // radius of load
-        geomv_t radius = shippo->BoundingSphere - GEOMV_MUL( cluster->contraction_speed, cluster->contraction_time );
-        
-        fixed_t timefrm;
-        fixed_t timepos;
-        Vertex3 object_space;
-		int cur_load = 0;
-        
-        // create full loads
-        for ( cur_load = 0; cur_load < numloads; cur_load++ ) {
-			timefrm = cluster->cur_contraction_time - ( ( cur_load + 1 ) * cluster->contraction_time );
-			timepos = timefrm * shippo->PhotonSpeed;
-            
-			// create one full frame set back because the current frame will
-			// be added by the linear particle animation code in the same frame
-			timepos -= speed * TheSimulator->GetThisFrameRefFrames();
-            
-            for ( int i = 0 ; i < single_load; i++ ) {
-                CalcSphereParticlePosition( object_space, radius, SAT_SPHERETYPE_NORMAL );
-                object_space.Z += FIXED_TO_GEOMV( 0x10000 * cluster->contraction_time )
-                + FIXED_TO_GEOMV( timepos );
-                
-                Vertex3 world_space;
-                MtxVctMUL( shippo->ObjPosition, &object_space, &world_space );
-                
-                particle_s particle;
-                PRT_InitParticle( particle, color, sizebound,
-                                 ref_z, &world_space, &dirvec,
-                                 lifetime, playerid, &extinfo );
-                particle.flags |= PARTICLE_COLLISION;
-                particle.flags |= PARTICLE_IS_PHOTON;
-                PRT_CreateLinearParticle( particle );
-            }
-        }
-     
-        // check if last load should be created
-        if ( ( cluster->cur_contraction_time / cluster->contraction_time ) > ( old_numel / single_load ) ) {
-			timefrm = cluster->cur_contraction_time - ( ( cur_load + 1 ) * cluster->contraction_time );
-			timepos = timefrm * shippo->PhotonSpeed;
-            
-			// create one full frame set back because the current frame will
-			// be added by the linear particle animation code in the same frame
-			timepos -= speed * TheSimulator->GetThisFrameRefFrames();
-            
-            for ( int i = 0 ; i < ( old_numel % single_load ); i++ ) {
-                CalcSphereParticlePosition( object_space, radius, SAT_SPHERETYPE_NORMAL );
-                object_space.Z += FIXED_TO_GEOMV( 0x10000 * cluster->contraction_time )
-                + FIXED_TO_GEOMV( timepos );
-                
-                Vertex3 world_space;
-                MtxVctMUL( shippo->ObjPosition, &object_space, &world_space );
-                
-                particle_s particle;
-                PRT_InitParticle( particle, color, sizebound,
-                                 ref_z, &world_space, &dirvec,
-                                 lifetime, playerid, &extinfo );
-                particle.flags |= PARTICLE_COLLISION;
-                particle.flags |= PARTICLE_IS_PHOTON;
-                PRT_CreateLinearParticle( particle );
-            }
-            
-        }
-        
-        // calculate remaining visible sphere particles
-        cluster->numel -= ( cluster->cur_contraction_time / cluster->contraction_time ) * single_load;
-        if ( cluster->numel < 0 ) {
-            cluster->numel = 0;
-        }
-        
-        int next_numel = cluster->numel - single_load;
-        if ( next_numel < 0 ) {
-            next_numel = 0;
-        }
-        
-        if ( cluster->numel == 0 ) {
-            PRT_DeleteCluster(cluster);
-        }
-        else {
-            // contract and rotate appropriate amount of particles
-            
-            // set old and new center values
-            old_center.X = cluster->center.X;
-            old_center.Y = cluster->center.Y;
-            old_center.Z = ( cluster->cur_contraction_time / cluster->contraction_time ) ? 0 : cluster->center.Z;
-            cluster->center.Z = FIXED_TO_GEOMV( 0x10000
-                                               * ( cluster->cur_contraction_time % cluster->contraction_time ) );
-            
-            contraction = ( cluster->cur_contraction_time < cluster->contraction_time )
-            ? ( cluster->contraction_speed * TheSimulator->GetThisFrameRefFrames() )
-            : ( cluster->contraction_speed * ( cluster->cur_contraction_time % cluster->contraction_time ) );
-            
-            bams_t pitch = cluster->pitch * TheSimulator->GetThisFrameRefFrames();
-            bams_t yaw   = cluster->yaw   * TheSimulator->GetThisFrameRefFrames();
-            bams_t roll  = cluster->roll  * TheSimulator->GetThisFrameRefFrames();
-            int pid = 0;
-            for ( pid = ( cluster->numel - 1 ); pid >= next_numel; pid-- ) {
-                
-                cluster->rep[ pid ].position.X -= old_center.X;
-                cluster->rep[ pid ].position.Y -= old_center.Y;
-                cluster->rep[ pid ].position.Z -= old_center.Z;
-                
-                //FIXME ?:
-                // particles may not be contained in
-                // ship-bounding-sphere any more
-                CalcSphereParticleRotation( cluster->rep[ pid ].position,
-                                           pitch, yaw, roll );
-                CalcSphereContraction( cluster->rep[ pid ].position, contraction );
-                
-                // move particles forward
-                cluster->rep[ pid ].position.X += cluster->center.X;
-                cluster->rep[ pid ].position.Y += cluster->center.Y;
-                cluster->rep[ pid ].position.Z += cluster->center.Z;
-            }
-            for ( pid = next_numel - 1; pid >= 0; pid-- ) {
-                CalcSphereParticleRotation( cluster->rep[ pid ].position,
-                                           pitch, yaw, roll );
-            }
-            // update cluster radius ?
-            cluster->bdsphere -= contraction;
-        }
-        
-        cluster->cur_contraction_time %= cluster->contraction_time;
-    }
-    else {
-        bams_t pitch = cluster->pitch * TheSimulator->GetThisFrameRefFrames();
-        bams_t yaw   = cluster->yaw   * TheSimulator->GetThisFrameRefFrames();
-        bams_t roll  = cluster->roll  * TheSimulator->GetThisFrameRefFrames();
-        
-        for ( int pid = 0; pid < cluster->numel; pid++ ) {
-            CalcSphereParticleRotation( cluster->rep[ pid ].position,
-                                       pitch, yaw, roll );
-        }
-    }
-}
-
-// check if genobject has attached particle clusters of a certain type --------
-//
-objectbase_pcluster_s * E_World::PRT_ObjectHasAttachedClustersOfType( GenObject* genobjpo, int animtype )
-{
-	ASSERT( genobjpo != NULL );
-    
-	objectbase_pcluster_s *scan = genobjpo->AttachedPClusters;
-	for ( ; scan; scan = scan->attachlist ) {
-        
-		ASSERT( scan->type & CT_GENOBJECTRELATIVE_OBJ_MASK );
-        
-		if ( scan->animtype == animtype )
-			return scan;
-	}
-    
-	return NULL;
-}
-
 void LinearParticleCollision( linear_pcluster_s *cluster, int pid ) {
     TheGameCollDet->LinearParticleCollision(cluster, pid);
 }
diff -u parsec_server/g_main_sv.cpp ../../openparsec.bak/src/parsec_server/g_main_sv.cpp
--- parsec_server/g_main_sv.cpp	2013-01-31 13:22:06.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/g_main_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -662,14 +662,14 @@
 	if ( pShip->WeaponsActive & WPMASK_CANNON_LIGHTNING ) {
 		m_Players[playerid].WFX_MaintainLightning( pShip );
 	}
-    
+    /*
 	// maintain photon
 	photon_sphere_pcluster_s* cluster = (photon_sphere_pcluster_s *)
-    TheWorld->PRT_ObjectHasAttachedClustersOfType( pShip, SAT_PHOTON );
+    PRT_ObjectHasAttachedClustersOfType( shippo, SAT_PHOTON );
 	if ( cluster != NULL ) {
-		TheWorld->CalcPhotonSphereAnimation( cluster );
+		WFX_CalcPhotonSphereAnimation( cluster );
 	}
-    /*
+    
 	// maintain emp
 	if ( shippo->WeaponsActive & WPMASK_DEVICE_EMP ) {
 		WFX_CreateEmpWaves( shippo );
diff -u parsec_server/g_player.cpp ../../openparsec.bak/src/parsec_server/g_player.cpp
--- parsec_server/g_player.cpp	2013-01-31 13:22:04.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/g_player.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -552,37 +552,38 @@
         //MSGOUT("G_Player::_WFX_ActivatePhoton: client %d illigally tried to fire Photon Cannon\n",m_nClientID);
         return;
 	}
-    
+    /*
+    Uncomment this when the value exists server side
     // check if enough energy to shoot photon
     if ( pShip->CurEnergy < MIN_PHOTON_ENERGY ) {
 		MSGOUT("G_Player::_WFX_ActivatePhoton: client %d low energy",m_nClientID);
 		return;
 	}
     
+    Uncomment this when particles are simulated server side
     // check if photon cannon still firing
-    if ( TheWorld->PRT_ObjectHasAttachedClustersOfType( pShip, SAT_PHOTON ) ) {
-        return;
+    if ( PRT_ObjectHasAttachedClustersOfType( shippo, SAT_PHOTON ) ) {
+        return FALSE;
     }
      
-    //Not sure yet if I even need to simulate this part below
+    Not sure yet if I even need to simulate this part below
     // create particle sphere
-    if ( !TheWorld->CreatePhotonSphere( pShip ) ) {
-        return;
+    if ( !CreatePhotonSphere( shippo ) ) {
+        ShowMessage( "could not create sphere" );
+        return FALSE;
     }
-    
+    */
     // set active flag
     pShip->WeaponsActive |= WPMASK_CANNON_PHOTON;
-    MSGOUT("G_Player::_WFX_ActivatePhoton: client %d charging photon cannon",m_nClientID);
-    
+    //MSGOUT("G_Player::_WFX_ActivatePhoton: client %d charging photon cannon",m_nClientID);
+    // send remote event to switch photon on
+   
 }
 
 // deactivate photon cannon of specified ship ----------------------------------
 //
 void G_Player::_WFX_DeactivatePhoton()
 {
-    // anim type for photon particles (no "real" sphere animtype)
-    #define SAT_PHOTON                          0x00000008
-
 	ASSERT( m_pSimPlayerInfo != NULL );
 	ShipObject* pShip = m_pSimPlayerInfo->GetShipObject();
     ASSERT( pShip != NULL );
@@ -591,13 +592,13 @@
     
 	// reset activation flag
     pShip->WeaponsActive &= ~WPMASK_CANNON_PHOTON;
-    MSGOUT("G_Player::_WFX_DectivatePhoton: client %d fired photon cannon",m_nClientID);
-    
+    //MSGOUT("G_Player::_WFX_DectivatePhoton: client %d fired photon cannon",m_nClientID);
+    /*
     // start firing
-    photon_sphere_pcluster_s* cluster = (photon_sphere_pcluster_s *) TheWorld->PRT_ObjectHasAttachedClustersOfType( pShip, SAT_PHOTON );
-    if(cluster != NULL)
-       cluster->firing = TRUE;
-    
+    photon_sphere_pcluster_s* cluster = (photon_sphere_pcluster_s *)
+    PRT_ObjectHasAttachedClustersOfType( shippo, SAT_PHOTON );
+    cluster->firing = TRUE;
+    */
 }
 
 // create missile originating from specified position -------------------------
@@ -714,7 +715,7 @@
    	pShip->NumPartMissls--;
 
 }
-/*
+
 void G_Player::FireEMP(byte Upgradelevel) {
 	ASSERT( m_pSimPlayerInfo != NULL );
 	ShipObject* pShip = m_pSimPlayerInfo->GetShipObject();
@@ -733,7 +734,7 @@
 		}
 	}
 }
-*/
+
 
 
 // record a kill --------------------------------------------------------------
Common subdirectories: parsec_server/include and ../../openparsec.bak/src/parsec_server/include
diff -u parsec_server/inp_main_sv.cpp ../../openparsec.bak/src/parsec_server/inp_main_sv.cpp
--- parsec_server/inp_main_sv.cpp	2013-01-31 13:22:07.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/inp_main_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -79,7 +79,7 @@
 	
 	for ( int nCount = 0; nCount < nRepcount; nCount++ ) {
 		dword wpos = KeybBuffer->WritePos + 1;
-		wpos = wpos % (KEYB_BUFF_SIZ);
+		wpos = wpos & (KEYB_BUFF_SIZ_M);
 		
 		pos = &KeybBuffer->Data + wpos;
 		
diff -u parsec_server/nl_udpdriver.cpp ../../openparsec.bak/src/parsec_server/nl_udpdriver.cpp
--- parsec_server/nl_udpdriver.cpp	2013-01-31 13:22:07.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/nl_udpdriver.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -394,7 +394,7 @@
 
 		// advance to next structure in buffer
 
-#ifdef SYSTEM_MACOSX_UNUSED
+#ifdef SYSTEM_MACOSX
 		int len = max( sizeof(struct sockaddr), ifr->ifr_addr.sa_len );
 #else
 		int len = sizeof(struct sockaddr);
@@ -462,7 +462,7 @@
 
 enum {
 
-	KEY_NETIFACE_INTERFACE
+	KEY_NETIFACE_INTERFACE,
 };
 
 PRIVATE
diff -u parsec_server/sys_msg_sv.cpp ../../openparsec.bak/src/parsec_server/sys_msg_sv.cpp
--- parsec_server/sys_msg_sv.cpp	2013-01-31 13:22:08.000000000 -0500
+++ ../../openparsec.bak/src/parsec_server/sys_msg_sv.cpp	2013-01-30 13:16:00.000000000 -0500
@@ -32,7 +32,7 @@
 #include "debug.h"
 
 // C library 
-#ifdef SYSTEM_WIN32_UNUSED
+#ifdef SYSTEM_WIN32
 #  include <time.h>
 #else
 #  include <sys/time.h>
@@ -64,9 +64,9 @@
 
 
 //FIXME: Win32 specific
-#ifdef SYSTEM_WIN32_UNUSED
+#ifdef SYSTEM_WIN32
 	#include "windows.h"
-#endif // SYSTEM_WIN32_UNUSED
+#endif // SYSTEM_WIN32
 
 // flags ----------------------------------------------------------------------
 //
@@ -266,7 +266,7 @@
 {
 	static char szBuffer[ 128 ] = "";
 
-#ifdef SYSTEM_WIN32_UNUSED
+#ifdef SYSTEM_WIN32
 
 
 	// get the current timeval ( usec resolution )
@@ -287,7 +287,7 @@
 		tv_diff.tv_sec,
 		tv_diff.tv_usec );
 
-#endif // SYSTEM_WIN32_UNUSED
+#endif // SYSTEM_WIN32
 
 	return szBuffer;
 }
@@ -311,7 +311,7 @@
 
 		// prepend the current date/time
 		
-#ifdef SYSTEM_WIN32_UNUSED
+#ifdef SYSTEM_WIN32
 
 		//FIXME: recheck whether SYSs_GetCurTimeString() works properly
 		//fprintf( fp, "%s: ", SYSs_GetCurTimeString() );
